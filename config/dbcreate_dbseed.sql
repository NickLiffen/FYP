-- MySQL Script generated by MySQL Workbench
-- Wed Jan 20 15:22:49 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema SchoolDatabase
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `SchoolDatabase` ;

-- -----------------------------------------------------
-- Schema SchoolDatabase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SchoolDatabase` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `SchoolDatabase` ;

-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Teacher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Teacher` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Teacher` (
  `Teacher_ID` INT NOT NULL AUTO_INCREMENT,
  `Teacher_Title` VARCHAR(45) NOT NULL,
  `Teacher_Fname` VARCHAR(45) NOT NULL,
  `Teacher_Lname` VARCHAR(45) NOT NULL,
  `Teacher_Email` VARCHAR(45) NOT NULL,
  `Teacher_Mobile_Number` VARCHAR(45) NULL,
  `Teacher_Username` VARCHAR(45) NOT NULL,
  `Teacher_Password` VARCHAR(300) NOT NULL,
  `Role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Teacher_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Parent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Parent` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Parent` (
  `Parent_ID` INT NOT NULL AUTO_INCREMENT,
  `Parent_Title` VARCHAR(45) NOT NULL,
  `Parent_Fname` VARCHAR(45) NOT NULL,
  `Parent_Lname` VARCHAR(45) NOT NULL,
  `Parent_Email` VARCHAR(45) NOT NULL,
  `Parent_Mobile_Number` VARCHAR(15) NULL,
  `Parent_Home_Number` VARCHAR(15) NULL,
  `Parent_Address` VARCHAR(100) NULL,
  `Parent_Username` VARCHAR(45) NOT NULL,
  `Parent_Password` VARCHAR(300) NOT NULL,
  `Role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Parent_ID`),
  UNIQUE INDEX `Parent_ID_UNIQUE` (`Parent_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Student` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Student` (
  `Student_ID` INT NOT NULL AUTO_INCREMENT,
  `Student_Title` VARCHAR(45) NOT NULL,
  `Student_Fname` VARCHAR(45) NOT NULL,
  `Student_Lname` VARCHAR(45) NOT NULL,
  `Student_Email` VARCHAR(45) NULL,
  `Student_Graduation_Year` INT NULL,
  `Student_Username` VARCHAR(45) NULL,
  `Student_Password` VARCHAR(300) NULL,
  `Role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Student_ID`),
  UNIQUE INDEX `Student_ID_UNIQUE` (`Student_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Subject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Subject` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Subject` (
  `Subject_ID` INT NOT NULL AUTO_INCREMENT,
  `Subject_Name` VARCHAR(45) NOT NULL,
  `Subject_Description` VARCHAR(45) NULL,
  PRIMARY KEY (`Subject_ID`),
  UNIQUE INDEX `Subject_ID_UNIQUE` (`Subject_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Room` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Room` (
  `Room_ID` INT NOT NULL AUTO_INCREMENT,
  `Room_Name` VARCHAR(45) NOT NULL,
  `Rom_Description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Room_ID`),
  UNIQUE INDEX `Room_ID_UNIQUE` (`Room_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Class`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Class` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Class` (
  `Class_ID` INT NOT NULL AUTO_INCREMENT,
  `Class_Level` VARCHAR(45) NOT NULL,
  `Class_Capacity` VARCHAR(45) NULL,
  `Class_Date` VARCHAR(45) NOT NULL,
  `Class_Start_Time` VARCHAR(45) NOT NULL,
  `Class_End_Time` VARCHAR(45) NOT NULL,
  `Subject_ID` INT NOT NULL,
  `Room_ID` INT NOT NULL,
  `Teacher_ID` INT NOT NULL,
  PRIMARY KEY (`Class_ID`, `Subject_ID`, `Room_ID`, `Teacher_ID`),
  INDEX `fk_Class_Subject1_idx` (`Subject_ID` ASC),
  INDEX `fk_Class_Room1_idx` (`Room_ID` ASC),
  INDEX `fk_Class_Teacher1_idx` (`Teacher_ID` ASC),
  UNIQUE INDEX `Class_ID_UNIQUE` (`Class_ID` ASC),
  CONSTRAINT `fk_Class_Subject1`
    FOREIGN KEY (`Subject_ID`)
    REFERENCES `SchoolDatabase`.`Subject` (`Subject_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Class_Room1`
    FOREIGN KEY (`Room_ID`)
    REFERENCES `SchoolDatabase`.`Room` (`Room_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Class_Teacher1`
    FOREIGN KEY (`Teacher_ID`)
    REFERENCES `SchoolDatabase`.`Teacher` (`Teacher_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Admin` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Admin` (
  `Admin_ID` INT NOT NULL AUTO_INCREMENT,
  `Admin_Title` VARCHAR(45) NOT NULL,
  `Admin_Fname` VARCHAR(45) NOT NULL,
  `Admin_Lname` VARCHAR(45) NOT NULL,
  `Admin_Email` VARCHAR(45) NOT NULL,
  `Admin_Privledge_Level` VARCHAR(45) NULL,
  `Admin_Username` VARCHAR(45) NOT NULL,
  `Admin_Password` VARCHAR(300) NULL,
  `Role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Admin_ID`),
  UNIQUE INDEX `Admin_ID_UNIQUE` (`Admin_ID` ASC))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Student_has_Class`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Student_has_Class` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Student_has_Class` (
  `Student_ID` INT NOT NULL,
  `Class_ID` INT NOT NULL,
  PRIMARY KEY (`Student_ID`, `Class_ID`),
  INDEX `fk_Student_has_Class_Class1_idx` (`Class_ID` ASC),
  INDEX `fk_Student_has_Class_Student_idx` (`Student_ID` ASC),
  CONSTRAINT `fk_Student_has_Class_Student`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `SchoolDatabase`.`Student` (`Student_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Class_Class1`
    FOREIGN KEY (`Class_ID`)
    REFERENCES `SchoolDatabase`.`Class` (`Class_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Student_has_Parent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Student_has_Parent` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Student_has_Parent` (
  `Student_Student_ID` INT NOT NULL,
  `Parent_Parent_ID` INT NOT NULL,
  PRIMARY KEY (`Student_Student_ID`, `Parent_Parent_ID`),
  INDEX `fk_Student_has_Parent_Parent1_idx` (`Parent_Parent_ID` ASC),
  INDEX `fk_Student_has_Parent_Student1_idx` (`Student_Student_ID` ASC),
  CONSTRAINT `fk_Student_has_Parent_Student1`
    FOREIGN KEY (`Student_Student_ID`)
    REFERENCES `SchoolDatabase`.`Student` (`Student_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Parent_Parent1`
    FOREIGN KEY (`Parent_Parent_ID`)
    REFERENCES `SchoolDatabase`.`Parent` (`Parent_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `SchoolDatabase`.`Attendance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SchoolDatabase`.`Attendance` ;

CREATE TABLE IF NOT EXISTS `SchoolDatabase`.`Attendance` (
  `Attendance_ID` INT NOT NULL AUTO_INCREMENT,
  `Attendance_Status` VARCHAR(45) NOT NULL,
  `Attendance_Remarks` VARCHAR(45) NULL,
  `Class_ID` INT NOT NULL,
  `Student_ID` INT NOT NULL,
  PRIMARY KEY (`Attendance_ID`, `Class_ID`, `Student_ID`),
  INDEX `fk_Attendance_Class1_idx` (`Class_ID` ASC),
  INDEX `fk_Attendance_Student1_idx` (`Student_ID` ASC),
  UNIQUE INDEX `Attendance_ID_UNIQUE` (`Attendance_ID` ASC),
  CONSTRAINT `fk_Attendance_Class1`
    FOREIGN KEY (`Class_ID`)
    REFERENCES `SchoolDatabase`.`Class` (`Class_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Attendance_Student1`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `SchoolDatabase`.`Student` (`Student_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-------------------------- INSERT Statements---------------------------------------------
--Teacher
INSERT INTO Teacher (Teacher_Title, Teacher_Fname, Teacher_Lname, Teacher_Email, Teacher_Mobile_Number, Teacher_Username, Teacher_Password, Role)
VALUES ('Mr', 'Robert','Sonny','Robert.Sonny@hotmail.com','07981691495','RobertSonny', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Teacher');
INSERT INTO Teacher (Teacher_Title, Teacher_Fname, Teacher_Lname, Teacher_Email, Teacher_Mobile_Number, Teacher_Username, Teacher_Password, Role)
VALUES ('Mrs', 'Rachel','Green','Rachel.Green@hotmail.com','07981691795','RachelGreen', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Teacher');
INSERT INTO Teacher (Teacher_Title, Teacher_Fname, Teacher_Lname, Teacher_Email, Teacher_Mobile_Number, Teacher_Username, Teacher_Password, Role)
VALUES ('Mrs', 'Erik','Nagy','Erik.Nagy@hotmail.com','07981391795','ErikNagy', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Teacher');
--Parent
INSERT INTO Parent (Parent_Title, Parent_Fname, Parent_Lname, Parent_Email, Parent_Mobile_Number, Parent_Home_Number, Parent_Address, Parent_Username, Parent_Password, Role)
VALUES ('Mr', 'Richard', 'Love', 'Richad.Love@gmail.com', '0782637463', '01634237485', 'ME89E4', 'RichardLove', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Parent');
INSERT INTO Parent (Parent_Title, Parent_Fname, Parent_Lname, Parent_Email, Parent_Mobile_Number, Parent_Home_Number, Parent_Address, Parent_Username, Parent_Password, Role)
VALUES ('Mrs', 'Belinda', 'Love', 'Belinda.Love@gmail.com', '0782237463', '01634237485', 'ME89E4', 'BelindaLove', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Parent');
INSERT INTO Parent (Parent_Title, Parent_Fname, Parent_Lname, Parent_Email, Parent_Mobile_Number, Parent_Home_Number, Parent_Address, Parent_Username, Parent_Password, Role)
VALUES ('Mr', 'Jason', 'King', 'Jason.King@gmail.com', '0782637463', '01634297485', 'ME59E4', 'JasonKing', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Parent');
--Student
INSERT INTO Student (Student_Title, Student_Fname, Student_Lname, Student_Email, Student_Year, Student_Username, Student_Password, Role)
VALUES ('Mr', 'Nick', 'Liffen', 'Nick.liffen@hotmail.com', '8', 'NickLiffen', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Student');
INSERT INTO Student (Student_Title, Student_Fname, Student_Lname, Student_Email, Student_Year, Student_Username, Student_Password, Role)
VALUES ('Mrs', 'Caris', 'Love', 'Caris.Love@hotmail.com', '9', 'CarisLove', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Student');
INSERT INTO Student (Student_Title, Student_Fname, Student_Lname, Student_Email, Student_Year, Student_Username, Student_Password, Role)
VALUES ('Mrs', 'Katie', 'King', 'Katie.King@hotmail.com', '10', 'KatieKing', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Student');
--Subject
INSERT INTO Subject (Subject_Name, Subject_Description)
VALUES ('English', 'English Language and Litriture');
INSERT INTO Subject (Subject_Name, Subject_Description)
VALUES ('Maths', 'Normal Mathmatics');
INSERT INTO Subject (Subject_Name, Subject_Description)
VALUES ('History', 'Histroy about the Normans');
--Room
INSERT INTO Room (Room_Name, Rom_Description)
VALUES ('3.0.1', 'Burnaby Building');
INSERT INTO Room (Room_Name, Rom_Description)
VALUES ('1.0.4', 'Richmond Building');
INSERT INTO Room (Room_Name, Rom_Description)
VALUES ('8.0.2', 'Portland Building');
--Class
INSERT INTO Class (Class_Level, Class_Capacity, Class_Date, Class_Start_Time, Class_End_Time, Subject_ID, Room_ID, Teacher_ID)
VALUES ('7', '3', '29-01-2016', '08:00', '09:00', '1', '2', '1');
INSERT INTO Class (Class_Level, Class_Capacity, Class_Date, Class_Start_Time, Class_End_Time, Subject_ID, Room_ID, Teacher_ID)
VALUES ('11', '3', '29-01-2016', '09:00', '10:00', '2', '1', '2');
INSERT INTO Class (Class_Level, Class_Capacity, Class_Date, Class_Start_Time, Class_End_Time, Subject_ID, Room_ID, Teacher_ID)
VALUES ('9', '3', '29-01-2016', '10:00', '11:00', '3', '3', '3');
--Admin
INSERT INTO Admin (Admin_Title, Admin_Fname, Admin_Lname, Admin_Email, Admin_Privledge_Level, Admin_Username, Admin_Password, Role)
VALUES ('Mr', 'Andrew', 'Stockdale', 'Andrew.Stockdale@hotmail.com', '1', 'AndrewStockdale', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Admin');
INSERT INTO Admin (Admin_Title, Admin_Fname, Admin_Lname, Admin_Email, Admin_Privledge_Level, Admin_Username, Admin_Password, Role)
VALUES ('Mrs', 'Rachel', 'Bodkin', 'Rachel.Bodkin@hotmail.com', '2', 'RachelBodkin', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Admin');
INSERT INTO Admin (Admin_Title, Admin_Fname, Admin_Lname, Admin_Email, Admin_Privledge_Level, Admin_Username, Admin_Password, Role)
VALUES ('Mrs', 'Sophie', 'Clarke', 'Sophie.Clarke@hotmail.com', '1', 'SophieClarke', '$2a$08$gnA71gTP.S2.DW51s0dpG.G1uBlN6sKM4anblcvFAZoWUrNLnaaWe', 'Admin');
--Student_has_Class
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('1', '1');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('2', '1');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('3', '1');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('1', '2');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('2', '2');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('3', '2');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('1', '3');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('2', '3');
INSERT INTO Student_has_Class (Student_ID, Class_ID)
VALUES ('3', '3');
--Student_has_Parent
INSERT INTO Student_has_Parent (Student_Student_ID, Parent_Parent_ID)
VALUES ('2', '1');
INSERT INTO Student_has_Parent (Student_Student_ID, Parent_Parent_ID)
VALUES ('2', '2');
INSERT INTO Student_has_Parent (Student_Student_ID, Parent_Parent_ID)
VALUES ('3', '3');
--Attendance
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Present', 'N/A', '1', '1');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Present', 'N/A', '1', '2');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Late', 'N/A', '1', '3');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Absent', 'N/A', '2', '1');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Present', 'N/A', '2', '2');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Present', 'N/A', '2', '3');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Present', 'N/A', '3', '1');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Late', 'N/A', '3', '2');
INSERT INTO Attendance (Attendance_Status, Attendance_Remarks, Class_ID, Student_ID)
VALUES ('Absent', 'N/A', '3', '3');
---------------------------------------------------------------------------------------------------


------Useful Queries----------------------

-----GET CLASS INFORMATION----
SELECT LOWER( Class.Class_Date)                                     AS 'Class Date',
			 LOWER( Class.Class_Start_Time ) 	                            AS 'Class Start Time',
			 LOWER( Class.Class_End_Time ) 	                              AS 'Class End Time',
			 LOWER( Subject.Subject_Name ) 		                            AS 'Subject Name',
			 LOWER( Room.Room_Name ) 								 	                    AS 'Room Name',
       CONCAT( Teacher.Teacher_Fname, ' ' , Teacher.Teacher_Lname)  AS 'Teacher Name'

FROM Class, Subject, Room, Teacher

WHERE Class.Subject_ID = Subject.Subject_ID
		AND Class.Room_ID = Room.Room_ID
		AND Class.Teacher_ID = Teacher.Teacher_ID

LIMIT 0 , 10;


-----GET ATTENDNACE INFORMATION-----
SELECT CONCAT( Student.Student_Fname, ' ' , Student.Student_Lname)    AS 'Student Name',
       LOWER(  Attendance.Attendance_Status ) 	                      AS 'Attendance Info',
			 LOWER(  Attendance.Attendance_Remarks ) 	                      AS 'Attendance Further Info',
			 LOWER(  Class.Class_Start_Time ) 	                            AS 'Class Start Time',
       LOWER(  Class.Class_End_Time ) 	                              AS 'Class End Time',
			 LOWER(  Subject.Subject_Name ) 		                            AS 'Subject Name',
			 CONCAT( Teacher.Teacher_Fname, ' ' , Teacher.Teacher_Lname)    AS 'Teacher Name'

FROM Student, Attendance, Class, Subject, Teacher

WHERE Attendance.Class_ID = Class.Class_ID
    AND Attendance.Student_ID = Student.Student_ID
    AND Class.Teacher_ID = Teacher.Teacher_ID
    AND Class.Subject_ID = Subject.Subject_ID
    AND LOWER( Student_Fname ) LIKE  'Nick'
		AND LOWER( Student_Lname ) LIKE 'Liffen'

LIMIT 0 , 100;

-----GET STUDENT PARENT INFORMATION-----
SELECT CONCAT( Student.Student_Fname, ' ' , Student.Student_Lname)  AS 'Student Name',
       CONCAT( Parent.Parent_Fname, ' ' , Parent.Parent_Lname)  AS 'Parent Name'

FROM Parent, Student, Student_has_Parent

WHERE Student_has_Parent.Student_Student_ID = Student.Student_ID
  AND Student_has_Parent.Parent_Parent_ID = Parent.Parent_ID
  AND LOWER( Student_Fname ) LIKE  'Caris'
  AND LOWER( Student_Lname ) LIKE 'Love'

LIMIT 0 , 100;


------GET ALL THE TEACHERS CLASSES------
SELECT CONCAT( Teacher.Teacher_Fname, ' ' , Teacher.Teacher_Lname)    AS 'Teacher Name',
       LOWER(  Subject.Subject_Name ) 		                            AS 'Subject Name',
       LOWER(  Class.Class_Start_Time ) 	                            AS 'Class Start Time',
       LOWER(  Class.Class_End_Time ) 	                              AS 'Class End Time',
       LOWER(  Class.Class_Date ) 	                                  AS 'Class Date',
       LOWER(  Class.Class_Level ) 	                                  AS 'Class Level'

FROM Teacher, Subject, Class, Room

WHERE Class.Teacher_ID = Teacher.Teacher_ID
  AND Class.Subject_ID = Subject.Subject_ID
  AND Class.Room_ID = Room.Room_ID
  AND LOWER( Teacher_Fname ) LIKE  'Erik'
  AND LOWER( Teacher_Lname ) LIKE 'Nagy'

  LIMIT 0 , 100;









SELECT Class.Class_Date, Class.Class_Start_Time, Class.Class_End_Time, Subject.Subject_Name, Room.Room_Name, Teacher.Teacher_Title, Teacher.Teacher_Fname, Teacher.Teacher_Lname FROM Class, Subject, Room, Teacher WHERE Class.Subject_ID = Subject.Subject_ID AND Class.Room_ID = Room.Room_ID AND Class.Teacher_ID = Teacher.Teacher_ID;
